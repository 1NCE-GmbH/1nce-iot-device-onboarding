name: Device-Onboarding-checks

env:
  AWS_REGION: eu-central-1

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-applications:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x 

    - name: Lint Applications
      run: |
        cd applications
        npm ci
        npm run lint
    
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  

    - name: Set Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Run Unit tests
      run: |
        cd applications
        npm ci
        npm run test -- --ci --coverage --reporters=default --reporters=jest-junit

    - name: Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Jest Tests
        path: applications/junit.xml
        reporter: jest-junit
        fail-on-error: true

  cloudformation-linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Cloud Formation Linter with Latest Version
        uses: scottbrenner/cfn-lint-action@v2

      - name: Print the Cloud Formation Linter Version & run Linter.
        run: |
          cfn-lint --version
          cd templates
          cfn-lint *.yaml

  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Give execution permission to script
        run: chmod +x ./scripts/build.sh
      - name: Build Temporary
        run: sudo bash ./scripts/build.sh dev temp-merge-request-${{ github.event.number }}
        if: github.event_name == 'pull_request'
      - name: Build Main
        run: sudo bash ./scripts/build.sh ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
        if: github.event_name != 'pull_request'
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/

  publish-templates:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Phython
        uses: actions/setup-python@v5
        with:
          python-version: '3.7'
      - name: Give execution permission to script
        run: chmod +x ./scripts/publish.sh
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/
      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 900 # 15 minutes
          mask-aws-account-id: true
      - name: Publish Temporary
        run: sudo bash ./scripts/publish.sh dev temp-merge-request-${{ github.event.number }}
        if: github.event_name == 'pull_request'
      - name: Publish Main
        run: sudo bash ./scripts/publish.sh ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }} "" latest
        if: github.event_name != 'pull_request'
