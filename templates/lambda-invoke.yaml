AWSTemplateFormatVersion: "2010-09-09"
Description: Create lambda to handle the SIM retrieval process

Parameters:
  #=======================================================
  #
  #                   CloudFormation Parameters
  #
  #=======================================================
  FunctionName:
    Description: Name of the function which should be invoked
    Type: String

Resources:
  #=======================================================
  #
  #                   Lambda resources
  #
  #=======================================================
  LambdaInvokeIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole

  LambdaInvoke:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: nodejs18.x
      Role:
        Fn::GetAtt:
          - LambdaInvokeIAMRole
          - Arn
      Handler: index.handler
      Code:
        ZipFile: |
          const { LambdaClient, InvokeCommand } = require('@aws-sdk/client-lambda');
          const response = require('cfn-response');
          exports.handler = function (event, context) {
              console.log("REQUEST RECEIVED:\n" + JSON.stringify(event));
              // For Delete requests, immediately send a SUCCESS response.
              if (event.RequestType == "Delete") {
                  response.send(event, context, "SUCCESS");
                  return;
              }
              let responseStatus = "FAILED";
              let responseData = {};
              let functionName = event.ResourceProperties.FunctionName;
              let lambda = new LambdaClient();
              lambda.send(new InvokeCommand({ FunctionName: functionName, InvocationType: "Event" }), function (err) {
                  if (err) {
                      responseData = { Error: "Invoke call failed" };
                      console.log(responseData.Error + ":\n", err);
                  } else {
                      responseStatus = "SUCCESS";
                  }
                  response.send(event, context, responseStatus, responseData);
              })
          }
      Description: Invoke a function during stack creation and return cfn-response

  LambdaFirstInvoke:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LambdaInvoke
          - Arn
      FunctionName:
        Ref: FunctionName
